version: '3.8'
services:
  db:
      container_name: flask_app_pg
      restart: always
      build:
        context: ./Docker
        dockerfile: db.Dockerfile
      environment:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
        APP_DB_USER: ${APP_DB_USER}
        APP_DB_PASSWORD: ${APP_DB_PASSWORD}
        APP_DB_NAME: ${APP_DB_NAME}
        TEST_DB_USER: ${TEST_DB_USER}
        TEST_DB_PASSWORD: ${TEST_DB_PASSWORD}
        TEST_DB_NAME: ${TEST_DB_NAME}
      ports:
        - "5432:5432"
      healthcheck:
        test: [ "CMD", "pg_isready", "-q", "-d", "${APP_DB_NAME}", "-U", "${APP_DB_USER}" ]
        timeout: 500s
        interval: 20s
        retries: 20
      volumes:
        - ./.cache/infile:/infile
        - pg_data:/var/lib/postgresql/data/
  server:
      container_name: flask_app_server
      build:
        context: ./
        dockerfile: Docker/server.Dockerfile
      ports:
        - "5005:5005"
      links:
        - db:db
      depends_on:
        db:
          condition: service_healthy
volumes:
  pg_data: {}
